/*
 * Copyright (c) 2023 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>

/* Uncomment this block if using RGB
&led_strip {
    chain-length = <6>;
    // chain-length = <31>; // Uncomment if using both per-key and underglow LEDs
    // chain-length = <25>; // Uncomment if using only per-key LEDs.
};
 */

/ {
    keymap {
        compatible = "zmk,keymap";

        default_layer {
            // -------------------------------------------------------------------------------------------------------------------------------
            // |  ESC  |  Q        |  W      |  E     |    R    |   T     |                                                     |    Y     |    U      |  I      |  O       |   P      |  LWIN  |
            // |  TAB  |  A        |  S      |  D     |    F    |   G     |                                                     |    H     |    J      |  K      |  L       |   ;      |  TAB   |
            // |       |           |  Z      |  X     |    C    |   V     |             |          |       |            |       |    B     |    N      |  M      |  ,       |   .      |        |
            //                               |        |   RET   | LSHIFT  |     SPACE   | LAYER 1  |       |  LAYER 2   | BSPC  |    ALT   |    CTRL   |         | 
            bindings = <
            &kp ESC      &kp Q       &kp W     &kp E     &kp R     &kp T                                                              &kp Y      &kp U     kp I     &kp O      &kp P     &kp LWIN
            &kp TAB      &kp A       &kp S     &kp D     &kp F     &kp G                                                              &kp H      &kp J     &kp K    &kp L      &kp SEMI  &kp TAB
            &trans       &trans      &kp Z     &kp X     &kp C     &kp V       &trans     &trans              &trans      &trans      &kp B      &kp N     &kp M    &kp COMMA  &kp DOT   &trans
                                               &trans    &kp RET   &kp LSHIFT  &kp SPACE  &mo 1               &mo 2       &kp BSPC    &kp LALT   &LCTRL    &trans    
            >;

            sensor-bindings = <&inc_dec_kp C_VOL_UP C_VOL_DN &inc_dec_kp PG_UP PG_DN>;
        };
        function_layer {
            // ---------------------------------------------------------------------------------------------------------------------------------
            // |        | CLEAR_ALL     |  BT_CLR   |   BTSEL0    |   BTSEL1    |   BTSEL2     |                                    |   GRAVE |         |  LBKT    |   RBKT    |  MINUS    |  EQUAL  |
            // |        |               |           |   BTSEL3    |   BTSEL4    |              |                                    |         |  SEMI   |  LPAR    |   RPAR    |   SQT     |  BSLH   |
            // |        | LSHIFT        |           |             |             |              |       |      |      |      |       |         |         |  COMMA   |    DOT    |   SLASH   |         |
            //                                      |             |             |              |       |      |      |      |       |         |         |          |           |
            bindings = <
            	&trans    &bt BT_CLR_ALL   &bt BT_CLR  &bt BT_SEL 0  &bt BT_SEL 1  &bt BT_SEL 2                                       &kp GRAVE  &trans    &kp LBKT   &kp RBKT  &kp MINUS  &kp EQUAL
            	&trans    &trans           &trans      &bt BT_SEL 3  &bt BT_SEL 4  &trans                                             &trans     &kp SEMI  &kp LPAR   &kp RPAR  &kp SQT    &kp BSLH
            	&trans    &LSHIFT          &trans      &trans        &trans        &trans        &trans  &trans       &trans  &trans  &trans     &trans    &kp COMMA  &kp DOT   &kp SLASH  &trans
                                                       &trans        &trans        &trans        &trans  &trans       &trans  &trans  &trans     &trans    &trans
            >;

            sensor-bindings = <&inc_dec_kp C_VOL_UP C_VOL_DN &inc_dec_kp PG_UP PG_DN>;
        };
        numpad_layer {
                    // ---------------------------------------------------------------------------------------------------------------------------------
            // |       |   0  |   1    |   2    |    3     |      |                                 |       |  PG_UP  |   PG_DOWN    |   HOME   |    END    |   PSCRN  |
            // |       |      |   4    |   5    |    6     |      |                                 |       |   UP    |   DOWN       |   LEFT   |    RIGHT  |          |
            // |       |      |   7    |   8    |    9     |      |      |      |    |      |       |       |         |              |          |   LSHIFT  |          |  
            //                         |        |          |      |      |      |    |      |       |       |         |              |       
            bindings = <
                &trans  &kp N0  &kp N1  &kp N2   &kp N3   &trans                                      &trans  &kp PG_UP   &kp PG_DOWN  &kp HOME    &kp END      &kp PSCRN
                &trans  &trans  &kp N4  &kp N5   &kp N6   &trans                                      &trans  &kp UP      &kp DOWN     &kp LEFT    &kp RIGHT    &trans
                &trans  &trans  &kp N7  &kp N8   &kp N9   &trans  &trans  &trans      &trans  &trans  &trans  &trans      &trans       &trans      &kp LSHIFT   &trans
                                        &trans   &trans   &trans  &trans  &trans      &trans  &trans  &trans  &trans      &trans
            >;

            sensor-bindings = <&inc_dec_kp C_VOL_UP C_VOL_DN &inc_dec_kp PG_UP PG_DN>;
        };
        };
    };
};
